global in_open
global in_exec
probe begin{
	in_open = 0
	in_exec = 0
}

probe syscall.execve{
	in_exec = 1
	chang_curr_sid(2165)

	
}
probe syscall.execve.return{
	in_exec = 0
	chang_curr_sid(2165)
}


probe syscall.open{
	in_open = 1
}

probe syscall.open.return{
	in_open = 0
}

probe kernel.function("avc_has_perm_noaudit@security/selinux/avc.c").return{
	if ( in_open == 1){
		# print the decision result
		printf("ssid:%s \n tsid:%s \n decision:%x \n", sid_to_context_str($ssid), sid_to_context_str($tsid), $return)
	}
}

probe end{
	printf("DONE!!!")
}
